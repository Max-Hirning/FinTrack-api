generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  admin
  user
  guest
}

enum Period {
  oneTime
  year
  month
  week
}

enum Currencies {
  AUD
  CAD
  CHF
  EUR
  GBP
  JPY
  PLN
  UAH
  USD
}

model Otp {
  id        String   @id @default(uuid())
  otp       String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  uuid      String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id        String   @id @default(uuid())
  url       String
  fileId    String
  userId    String
  users     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id                 String         @id @default(uuid())
  email              String         @unique
  lastName           String
  firstName          String
  password           String
  loanNotification   Boolean        @default(true)
  budgetNotification Boolean        @default(true)
  goalNotification   Boolean        @default(true)
  dateOfBirth        DateTime       @default(now()) @db.Date
  role               Roles          @default(guest)
  currency           Currencies     @default(USD)
  images             Image[]
  otps               Otp[]
  refreshTokens      RefreshToken[]
  cards              Card[]
  budgets            Budget[]
  goals              Goal[]
  loans              Loan[]
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
}

model Budget {
  id        String     @id @default(uuid())
  title     String
  balance   Float
  currency  Currencies
  period    Period
  // categories
  startDate DateTime
  endDate   DateTime
  userId    String
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  cards     Card[]     @relation("BudgetCard")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Card {
  id           String     @id @default(uuid())
  title        String
  balance      Float
  currency     Currencies
  startBalance Float
  userId       String
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  budgets      Budget[]   @relation("BudgetCard")
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Goal {
  id          String     @id @default(uuid())
  title       String
  amount      Float
  balance     Float      @default(0)
  currency    Currencies
  deadline    DateTime
  description String
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Loan {
  id          String     @id @default(uuid())
  title       String
  amount      Float
  balance     Float      @default(0)
  deadline    DateTime
  currency    Currencies
  date        DateTime
  description String
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}
